---
import { Image } from "astro:assets";
import { getRelativeLocaleUrl } from "astro:i18n";
import sessions from "../../data/sessions.json";
import timetable from "../../data/timetable.json";
import {
  getFormattedTime,
  getSessionSpeaker,
  isSponsoredSession,
} from "../../utils/timetable";

interface Props {
  /**
   * セッション情報
   */
  session?: (typeof timetable)[0]["timeSlots"][0]["rooms"][0]["session"];
}

const { session } = Astro.props;

const currentLocale = Astro.currentLocale || "ja";

// セッション情報がない場合は何も表示しない
if (!session) return null;

// スピーカー情報
const speakers = session.speakers
  .map((speaker) => {
    const speakerData = getSessionSpeaker(speaker.id);
    return {
      ...speaker,
      // MEMO: <Image>がoptionalでないので型を一致させている
      fullName: speakerData?.fullName ?? "",
      profilePicture: speakerData?.profilePicture ?? "",
    };
  })
  .filter((speaker) => speaker.profilePicture !== "");

// セッション情報
const sessionData = sessions.at(0)?.sessions.find((s) => s.id === session.id);
const isSponsored = isSponsoredSession(sessionData?.questionAnswers);
---

<style>
  .timetable-card {
    display: flex;
    flex-direction: column;
    width: 100%;
    gap: 4px;
    padding: 16px 24px;
    border-radius: 16px;
    background-color: var(--primitive-light-blue);
    color: var(--text-primary);
    height: 100%;
    box-sizing: border-box;
  }

  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .card-header-time {
    margin: 0;
    font-size: 12px;
    font-weight: 700;
  }

  .card-header-session-id {
    margin: 0;
    padding: 4px 16px;
    border-radius: 24px;
    font-size: 12px;
    font-weight: 700;
    color: var(--text-on-fill);
    background-color: var(--primitive-blue);
  }

  .card-sponsored {
    margin: 0;
    margin-bottom: 4px;
    padding: 2px 16px;
    border-radius: 24px;
    font-size: 12px;
    font-weight: 700;
    line-height: 1.75;
    color: var(--text-on-fill);
    background-color: var(--primitive-blue);
  }

  .card-title {
    margin: 0;
    font-size: 16px;
    font-weight: 700;
    line-height: 1.75;
  }

  .card-title-link {
    color: var(--text-primary);
    transition: ease color 0.3s;

    &:hover {
      color: var(--text-accent);
    }
  }

  .card-footer {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    padding-top: 8px;
  }

  .card-footer .speakers {
    display: flex;
    flex-flow: column;
    gap: 4px;
  }

  .speaker-info {
    display: flex;
    align-items: center;
    gap: 4px;
  }

  .speaker-thumbnail {
    width: 24px;
    height: 24px;
    object-fit: cover;
    border-radius: 50%;
  }

  .speaker-name {
    margin: 0;
    font-size: 12px;
    font-weight: 700;
  }

  .session-time {
    margin: 0;
    padding-bottom: 2px;
    font-size: 12px;
  }
</style>

<article
  class={`timetable-card ${session.roomId === 67044 ? "room-a" : "room-b"}`}
  aria-labelledby={`card-title-${session.id}`}
>
  <div class="card-header">
    <p class="card-header-time">
      {getFormattedTime(session.startsAt)} - {getFormattedTime(session.endsAt)}
    </p>
    {isSponsored && <p class="card-sponsored">Sponsored Session</p>}
  </div>
  <h3 id={`card-title-${session.id}`} class="card-title">
    <a
      href={getRelativeLocaleUrl(currentLocale, `/talks/${session.id}`)}
      class="card-title-link">{session.title}</a
    >
  </h3>
  <div class="card-footer">
    <div class="speakers">
      {
        speakers.map((speaker) => (
          <div class="speaker-info">
            <Image
              src={speaker.profilePicture}
              alt={speaker.fullName}
              width={24}
              height={24}
              loading="lazy"
              class="speaker-thumbnail"
            />
            <p class="speaker-name">{speaker.fullName}</p>
          </div>
        ))
      }
    </div>
    <p class="session-time">
      {
        session.categories
          .find((category) => category.id === 101938)
          ?.categoryItems.at(0)?.name
      }
    </p>
  </div>
</article>
