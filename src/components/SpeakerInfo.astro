---
import speakers from "../data/speakers.json";
import { Image } from "astro:assets";
import XLogo from "../assets/x-logo.svg";

interface Props {
  /**
   * 登壇者ID
   */
  speakerId: string;
}

const { speakerId } = Astro.props;

const speaker = speakers.find((s) => s.id === speakerId);

if (!speaker) {
  return null;
}
---

<style>
  .speaker {
    padding: 40px;
    border: 2px solid var(--surface-tertiary);
    border-radius: 16px;
    background-color: var(--surface-primary);
  }

  .speaker-header {
    display: flex;
    flex-direction: column;
    gap: 8px;
    margin-bottom: 8px;
  }

  .speaker-info {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .speaker-thumbnail {
    width: 44px;
    height: 44px;
    object-fit: cover;
    border-radius: 50%;
  }

  .speaker-name {
    margin: 0;
    font-size: 14px;
    font-weight: 700;
  }

  .speaker-socials {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 0 16px;

    & a {
      transition: ease opacity 0.3s;

      &:hover {
        opacity: 0.5;
      }
    }

    & svg {
      height: 24px;
      width: auto;
      vertical-align: middle;
    }
  }

  .speaker-tagline {
    margin: 0;
    font-size: 12px;
    font-weight: 700;
    color: var(--text-secondary);
  }

  .speaker-bio {
    margin: 0;
    font-size: 14px;
    line-height: 1.75;
    white-space: pre-wrap;
  }
</style>

<article class="speaker">
  <header class="speaker-header">
    <div class="speaker-info">
      <Image
        src={speaker.profilePicture}
        alt={speaker.fullName}
        width={24}
        height={24}
        loading="lazy"
        class="speaker-thumbnail"
      />
      <p class="speaker-name">{speaker.fullName}</p>
      <div class="speaker-socials">
        {
          speaker.links.map((link) => {
            if (link.linkType === "Twitter") {
              return (
                <a
                  href={link.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  aria-label={`${speaker.fullName}さんのX (Twitter)を新しいタブで開く`}
                >
                  <XLogo />
                </a>
              );
            }

            // 対応していないlinkTypeの場合は表示しない
            return null;
          })
        }
      </div>
    </div>
    <p class="speaker-tagline">{speaker.tagLine}</p>
  </header>
  <p class="speaker-bio">{speaker.bio}</p>
</article>
